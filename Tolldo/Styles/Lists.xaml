<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Import colors and fonts -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- ListView Base -->
    <Style TargetType="{x:Type ListView}" x:Key="ListViewBase">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- ListBox Base -->
    <Style TargetType="{x:Type ListBox}" x:Key="ListBoxBase">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
    </Style>

    <!-- ListViewItem -->
    <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItem">
        <Setter Property="BorderThickness" Value="5 0 0 0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBackgroundBrush}" />        
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <!-- When selected -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ColorForegroundBrush}" />
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ColorForegroundBrush}" />
            </Trigger>
            
            <!-- When hovering and not selected -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBackgroundBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <!-- When loaded -->
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Duration="00:00:00.5"
                                         From="0"
                                         To="1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Style.Triggers>
    </Style>
    
    <!-- ListBoxItemCheckbox-->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemCheckbox">
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <!-- Content -->
                        <ContentPresenter />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!-- When focused and not selected -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <!-- When hovering -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
            </Trigger>
            <!-- When loaded -->
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Duration="00:00:01"
                                         From="0"
                                         To="1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!-- When expanded in ViewModel-->
            <DataTrigger Binding="{Binding ExpandedActive, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
            </DataTrigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsSelected" Value="True" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- ListBoxItemBorderlessCheckbox-->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemBorderlessCheckbox">
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                        <!-- Content -->
                        <ContentPresenter />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>        
    </Style>

</ResourceDictionary>
