<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ext="clr-namespace:Tolldo.Extensions">

    <!-- Import colors, fonts and windows -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DynamicColors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Windows.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Base Flat button -->
    <Style TargetType="{x:Type Button}" x:Key="FlatButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Background" Value="{DynamicResource ColorForegroundBrush}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" 
                                  Opacity="0.95"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">

                        <TextBlock VerticalAlignment="Center" 
                                   HorizontalAlignment="Center" 
                                   Padding="10 5"
                                   Text="{TemplateBinding Content}"
                                   Foreground="{StaticResource LightForegroundBrush}"
                                   FontFamily="{StaticResource LatoRegular}"
                                   FontSize="{TemplateBinding FontSize}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <!-- When disabled -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource GrayBackgroundBrush}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Opacity="0" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            
            <!-- When hovering -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkerColorForegroundBrush}" />
            </Trigger>
            
            <!-- When pressed -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkColorForegroundBrush}" />
            </Trigger>
            
        </Style.Triggers>
    </Style>

    <!-- Flat square button with icon -->
    <Style TargetType="{x:Type Button}" x:Key="FlatIconButtonSquare" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" 
                                   FontFamily="{StaticResource FontAwesome}" 
                                   Foreground="{StaticResource LightForegroundBrush}" 
                                   Padding="10"
                                   FontSize="{TemplateBinding FontSize}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Flat button with icon -->
    <Style TargetType="{x:Type Button}" x:Key="FlatIconButton" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="50">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" 
                                   FontFamily="{StaticResource FontAwesome}" 
                                   Foreground="{StaticResource LightForegroundBrush}" 
                                   Padding="10"
                                   FontSize="{TemplateBinding FontSize}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Flat small button with icon -->
    <Style TargetType="{x:Type Button}" x:Key="FlatSmallIconButton" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="50">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" 
                                   FontFamily="{StaticResource FontAwesome}" 
                                   Foreground="{DynamicResource ColorForegroundBrush}" 
                                   Padding="10"
                                   FontSize="{TemplateBinding FontSize}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- List button with text and icon -->
    <Style TargetType="{x:Type Button}" x:Key="ListButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10 5">

                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Icon -->
                            <TextBlock Text="{TemplateBinding ext:IconExtension.Icon}"
                                       Grid.Column="0"
                                       Foreground="{DynamicResource ColorForegroundBrush}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="20"
                                       Margin="0 0 15 0"/>

                            <!-- Text -->
                            <TextBlock Text="{TemplateBinding Content}"
                                       Grid.Column="1"
                                       HorizontalAlignment="Right"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{StaticResource LatoRegular}"
                                       FontSize="16" />

                        </Grid>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <!-- When hovering -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBackgroundBrush}" />
            </Trigger>
            
            <!-- When pressed -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
            </Trigger>
            
        </Style.Triggers>
    </Style>
    
    <!-- Color background without text or icon -->
    <Style TargetType="{x:Type Button}" x:Key="ColorBackgroundButton" BasedOn="{StaticResource FlatIconButton}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Style.Triggers>
            <!-- When hovering -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.85" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
