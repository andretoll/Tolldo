<UserControl x:Class="Tolldo.Views.UserControls.SettingsMenuUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prop="clr-namespace:Tolldo.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="300">
    
    <DockPanel>
        
        <!-- Buttons -->
        <Border DockPanel.Dock="Bottom"
                Padding="20"
                Background="{DynamicResource SecondaryBackgroundBrush}">
            
            <StackPanel HorizontalAlignment="Center"
                        Orientation="Horizontal">

                <!-- Save -->
                <Button Style="{StaticResource SuccessButton}"
                        Command="{Binding SaveSettingsCommand}"
                        Margin="0 0 10 0"
                        Content="Save"
                        ToolTip="Save settings"/>

                <!-- Cancel -->
                <Button Style="{StaticResource PrimaryButton}"
                        Command="{Binding ReloadSettingsCommand}"
                        Content="Cancel"
                        ToolTip="Cancel"/>

            </StackPanel>
            
        </Border>

        <!-- Settings -->
        <Grid Margin="20">
            
            <TabControl Background="{DynamicResource PrimaryBackgroundBrush}"
                        HorizontalAlignment="Stretch">
                
                <TabItem Header="General">

                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  Padding="0 0 10 0">
                        
                        <!-- Application settings -->
                        <StackPanel>

                            <!-- Header -->
                            <TextBlock Style="{StaticResource LargeTextBlock}" 
                                       Foreground="{StaticResource TitleForegroundBrush}"
                                       Text="Application"
                                       Margin="0 0 0 5"/>                            
                            <TextBlock Style="{StaticResource SmallTextBlock}"
                                       Foreground="{DynamicResource PrimaryForegroundBrush}"
                                       Opacity="0.5"
                                       Text="* Some changed may require a restart."
                                       Margin="0 0 0 20"/>

                            <!-- Welcome message -->
                            <StackPanel Margin="0 0 0 20"
                                        ToolTipService.InitialShowDelay="0"
                                        ToolTip="The message to be displayed when launching the application.">
                                
                                <TextBlock Style="{StaticResource MediumTextBlock}" 
                                           Text="Welcome message"
                                           Margin="0 0 0 10" />
                                
                                <TextBox Style="{StaticResource StandardTextBox}"
                                         Text="{Binding Source={x:Static prop:Settings.Default}, Path=WelcomeMessage, UpdateSourceTrigger=PropertyChanged}" />
                                
                            </StackPanel>

                            <!-- Pinned location-->
                            <StackPanel Margin="0 0 0 20">

                                <TextBlock Style="{StaticResource MediumTextBlock}" 
                                           Text="Pinned location"
                                           Margin="0 0 0 10" />

                                <ComboBox SelectedValue="{Binding Source={x:Static prop:Settings.Default}, Path=PinnedLocation, UpdateSourceTrigger=PropertyChanged}"
                                          FontSize="14"
                                          SelectedValuePath="Tag">
                                    <ComboBoxItem Content="Top right" Tag="TopRight" />
                                    <ComboBoxItem Content="Top left" Tag="TopLeft" />
                                    <ComboBoxItem Content="Middle right" Tag="MiddleRight" />
                                    <ComboBoxItem Content="Middle left" Tag="MiddleLeft"/>
                                </ComboBox>

                            </StackPanel>

                            <!-- Minimize -->
                            <StackPanel Margin="0 0 0 20">

                                <!-- Minimize to tray -->
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                          IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=MinimizeToTray}"
                                          Margin="0 10 0 0"
                                          Content="Minimize to tray"
                                          ToolTipService.InitialShowDelay="0"
                                          ToolTip="If enabled, the application will be minimized to the Windows taskbar. Default is enabled." />

                                <!-- Minimize to tray message -->
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                          IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=MinimizeToTrayMessage}"
                                          IsEnabled="{Binding Source={x:Static prop:Settings.Default}, Path=MinimizeToTray}"
                                          Margin="20 10 0 0"
                                          Content="Notification"
                                          ToolTipService.InitialShowDelay="0"
                                          ToolTip="If enabled, a message will be shown when minimizing to tray. Default is enabled." />

                            </StackPanel>

                            <!-- Todo show percent -->
                            <StackPanel Margin="0 0 0 20">
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                          IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=TodoProgressShowPercent}"
                                          Content="Prefer percent"
                                          ToolTipService.InitialShowDelay="0"
                                          ToolTip="If enabled, overall progress will be shown in percentage. Default is disabled." />
                            </StackPanel>

                            <!-- Task check sound -->
                            <StackPanel Margin="0 0 0 20">
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                          IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=CheckSound}"
                                          Content="Check sound"
                                          ToolTipService.InitialShowDelay="0"
                                          ToolTip="If enabled, a sound will play whenever a task is checked. Default is enabled." />
                            </StackPanel>

                        </StackPanel>
                        
                    </ScrollViewer>

                </TabItem>
                <TabItem Header="Tasks">

                    <ScrollViewer>
                        
                        <StackPanel>

                            <!-- Tasks -->
                            <StackPanel Margin="0 0 0 20">

                                <!-- Header -->
                                <TextBlock Style="{StaticResource LargeTextBlock}" 
                                           Foreground="{StaticResource TitleForegroundBrush}"
                                           Text="Tasks"
                                           Margin="0 0 0 10"/>

                                <!-- Numbered tasks-->
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                          IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=NumberedTasks}"
                                          Margin="0 10"
                                          Content="Numbered tasks"
                                          ToolTipService.InitialShowDelay="0"
                                          ToolTip="If enabled, tasks will be numbered. Default is enabled." />

                            </StackPanel>

                            <!-- Completed tasks -->
                            <StackPanel Margin="0 0 0 20">

                                <!-- Header -->
                                <TextBlock Style="{StaticResource LargeTextBlock}" 
                                           Foreground="{StaticResource TitleForegroundBrush}"
                                           Text="Completed tasks"
                                           Margin="0 0 0 10"/>

                                <!-- Completed tasks on top -->
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                      IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=CompletedTasksOnTop}"
                                      Margin="0 10"
                                      Content="Completed tasks on top"
                                      ToolTipService.InitialShowDelay="0"
                                      ToolTip="If enabled, completed tasks will appear in the top of the list. Default is disabled."/>

                                <!-- Hide completed tasks -->
                                <CheckBox Style="{StaticResource TaskSquareCheckBox}"
                                      IsChecked="{Binding Source={x:Static prop:Settings.Default}, Path=HideCompletedTasks}"
                                      Margin="0 10"
                                      Content="Hide completed tasks"
                                      ToolTipService.InitialShowDelay="0"
                                      ToolTip="If enabled, completed tasks will be hidden. Default is disabled."/>

                            </StackPanel>

                        </StackPanel>
                        
                    </ScrollViewer>

                </TabItem>
                <TabItem Header="Appearance">

                    <ScrollViewer Padding="0 0 20 0">
                        
                        <StackPanel>

                            <!-- Theme -->
                            <StackPanel Margin="0 0 0 20">
                                
                                <!-- Header -->
                                <TextBlock Style="{StaticResource LargeTextBlock}" 
                                           Foreground="{StaticResource TitleForegroundBrush}"
                                           Text="Theme"
                                           Margin="0 0 0 10"/>
                                
                                <RadioButton IsChecked="{Binding DarkThemeEnabled}"
                                         FontSize="16"
                                         Content="Dark" />
                                <RadioButton IsChecked="{Binding DarkThemeEnabled, Mode=OneWay, Converter={StaticResource booleanToBooleanConverter}}" 
                                         Content="Light"
                                         FontSize="16" />
                                
                            </StackPanel>

                            <!-- Accent -->
                            <StackPanel Margin="0 0 0 20">
                                
                                <!-- Header -->
                                <TextBlock Style="{StaticResource LargeTextBlock}" 
                                           Foreground="{StaticResource TitleForegroundBrush}"
                                           Text="Accent"
                                           Margin="0 0 0 10"/>
                                
                                <!-- Accents -->
                                <StackPanel Orientation="Horizontal">

                                    <!-- Color 1-->
                                    <Button Style="{StaticResource ColorBackgroundButton}"
                                        Command="{Binding SetAccentCommand}"
                                        CommandParameter="Blue"
                                        Margin="0 5 5 5"
                                        Background="{StaticResource BlueColorGradientBrush}"
                                        ToolTip="Blue"
                                        FontSize="14" />

                                    <!-- Color 2 -->
                                    <Button Style="{StaticResource ColorBackgroundButton}"
                                        Command="{Binding SetAccentCommand}"
                                        CommandParameter="Red"
                                        Margin="5"
                                        Background="{StaticResource RedColorGradientBrush}"
                                        ToolTip="Red"
                                        FontSize="16" />

                                    <!-- Color 3 -->
                                    <Button Style="{StaticResource ColorBackgroundButton}"
                                        Command="{Binding SetAccentCommand}"
                                        CommandParameter="Orange"
                                        Margin="5"
                                        Background="{StaticResource OrangeColorGradientBrush}"
                                        ToolTip="Orange"
                                        FontSize="16" />

                                    <!-- Color 4 -->
                                    <Button Style="{StaticResource ColorBackgroundButton}"
                                        Command="{Binding SetAccentCommand}"
                                        CommandParameter="Pink"
                                        Margin="5"
                                        Background="{StaticResource PinkColorGradientBrush}"
                                        ToolTip="Pink"
                                        FontSize="16" />
                                </StackPanel>
                                
                            </StackPanel>

                            <!-- Background image -->
                            <StackPanel Margin="0 0 0 20">

                                <!-- Header -->
                                <TextBlock Style="{StaticResource LargeTextBlock}"
                                           Foreground="{StaticResource TitleForegroundBrush}"
                                           Text="Background"
                                           Margin="0 0 0 10" />

                                <!-- Background image menu -->
                                <Border>

                                    <StackPanel Orientation="Horizontal">

                                        <!-- None -->
                                        <Button Command="{Binding ChangeAppImageCommand}"
                                                Width="50"
                                                Height="50"
                                                CommandParameter=""
                                                Margin="0 0 10 0">

                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Opacity" Value="0.7" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                    BorderThickness="1"
                                                                    BorderBrush="{DynamicResource GrayBackgroundBrush}">

                                                                    <TextBlock Style="{StaticResource MediumTextBlock}"
                                                                           Foreground="{DynamicResource PrimaryForegroundBrush}"
                                                                           VerticalAlignment="Center"
                                                                           HorizontalAlignment="Center"
                                                                           FontSize="32"
                                                                           FontFamily="{StaticResource FontAwesome}"
                                                                           Text="&#xf05e;" />

                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </Button.Style>

                                        </Button>

                                        <!-- Background 1 -->
                                        <Button Command="{Binding ChangeAppImageCommand}"
                                                CommandParameter="/Images/Covers/travel.jpg"
                                                Margin="0 0 10 0">

                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Opacity" Value="0.7" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}">

                                                                    <Image Stretch="UniformToFill"
                                                                       Width="50"
                                                                       Height="50">

                                                                        <Image.Source>
                                                                            <BitmapImage UriSource="/Images/Covers/travel.jpg" 
                                                                                     DecodePixelWidth="200" />
                                                                        </Image.Source>
                                                                    </Image>

                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </Button.Style>

                                        </Button>

                                        <!-- Background 2 -->
                                        <Button Command="{Binding ChangeAppImageCommand}"
                                                Focusable="False"
                                                CommandParameter="/Images/Covers/winter.jpg">

                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Opacity" Value="0.7" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}">

                                                                    <Image Stretch="UniformToFill"
                                                                       Width="50"
                                                                       Height="50">

                                                                        <Image.Source>
                                                                            <BitmapImage UriSource="/Images/Covers/winter.jpg" 
                                                                                     DecodePixelWidth="200" />
                                                                        </Image.Source>
                                                                    </Image>

                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>

                                                </Style>
                                            </Button.Style>

                                        </Button>

                                    </StackPanel>

                                </Border>

                            </StackPanel>

                            <!-- ProgressBar height -->
                            <StackPanel Margin="0 0 0 20">
                                
                                <!-- Header -->
                                <TextBlock Style="{StaticResource LargeTextBlock}" 
                                           Foreground="{StaticResource TitleForegroundBrush}"
                                           Text="Progressbar height"
                                           Margin="0 0 0 20" />
                                
                                <Slider Value="{Binding Source={x:Static prop:Settings.Default}, Path=ProgressBarHeight}"
                                        Minimum="1"
                                        Maximum="31">
                                </Slider>
                                
                            </StackPanel>

                        </StackPanel>
                        
                    </ScrollViewer>

                </TabItem>
                
            </TabControl>
            
        </Grid>

    </DockPanel>
    
</UserControl>
