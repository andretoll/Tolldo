<UserControl x:Class="Tolldo.Views.UserControls.TodoItemUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ext="clr-namespace:Tolldo.Extensions"
             xmlns:prop="clr-namespace:Tolldo.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <!-- Each ListViewItem -->
    <Grid ToolTip="{Binding Name}"
          Margin="0 0 5 0"
          Background="Transparent"
          Height="50"
          Tag="{Binding RelativeSource={RelativeSource 
                        Mode=FindAncestor, 
                        AncestorType={x:Type ListView}}, 
                        Path=DataContext}">
        
        <Grid.ColumnDefinitions>
            <!-- Name -->
            <ColumnDefinition Width="*" />
            <!-- Icons and progress -->
            <ColumnDefinition Width="Auto" />
            <!-- Drag handle -->
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        
        <!-- Context menu -->
        <Grid.ContextMenu>
            <ContextMenu Style="{StaticResource ContextMenuBase}"
                         DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">

                <!-- Make favorite -->
                <MenuItem Style="{StaticResource MenuItemBase}"
                          Visibility="{Binding SelectedTodo.Favorite, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource reversedBooleanToVisibilityConverter}}"
                          Command="{Binding SelectedTodo.MakeFavoriteCommand}"
                          FontFamily="{StaticResource FontAwesome}"
                          ext:IconExtension.Icon="&#xf521;"
                          Header="Make favorite"/>

                <!-- Unmake favorite -->
                <MenuItem Style="{StaticResource MenuItemBase}"
                          Visibility="{Binding SelectedTodo.Favorite, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource booleanToVisibilityConverter}}"
                          Command="{Binding SelectedTodo.MakeFavoriteCommand}"
                          FontFamily="{StaticResource FontAwesome}"
                          ext:IconExtension.Icon="&#xf05e;"
                          Header="Remove favorite"/>

                <!-- Reset all tasks -->
                <MenuItem Style="{StaticResource MenuItemBase}"
                          Command="{Binding SelectedTodo.ResetTasksCommand}"
                          FontFamily="{StaticResource FontAwesomeRegular}"
                          ext:IconExtension.Icon="&#xf111;"
                          Header="Reset tasks"/>

                <!-- Rename item -->
                <MenuItem Style="{StaticResource MenuItemBase}" 
                          Command="{Binding SelectedTodo.ToggleRenameCommand}"
                          FontFamily="{StaticResource FontAwesomeRegular}"
                          ext:IconExtension.Icon="&#xf044;"                          
                          Header="Rename Todo"/>

                <Separator Style="{StaticResource MenuSeparatorBase}" />

                <!-- Delete item -->
                <MenuItem Style="{StaticResource MenuItemDanger}"
                          Command="{Binding DeleteTodoCommand}"
                          FontFamily="{StaticResource FontAwesomeRegular}"
                          ext:IconExtension.Icon="&#xf2ed;"
                          Header="Delete Todo"/>
                
            </ContextMenu>
        </Grid.ContextMenu>

        <!-- Name and favorite icon -->
        <Grid Visibility="{Binding RenameActive, Converter={StaticResource reversedBooleanToVisibilityConverter}}">

            <!-- Icon -->
            <TextBlock Visibility="{Binding IsFavorite, Converter={StaticResource booleanToVisibilityConverter}}" Text="&#xf521;"
                       Foreground="{StaticResource TitleForegroundBrush}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       FontSize="12"
                       RenderTransformOrigin="0.5, 0.5"
                       FontFamily="{StaticResource FontAwesome}">

                <TextBlock.RenderTransform>
                    <RotateTransform CenterX="0" CenterY="0" Angle="-45" />
                </TextBlock.RenderTransform>
                
            </TextBlock>
            
            <!-- Name -->
            <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Style="{StaticResource MediumTextBlock}"
                       TextTrimming="CharacterEllipsis"
                       MaxWidth="170"
                       FontSize="16"
                       ToolTip="{Binding Name}"
                       Margin="10 0 20 0"
                       Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
            
        </Grid>

        <!-- Rename -->
        <StackPanel Visibility="{Binding RenameActive, Converter={StaticResource booleanToVisibilityConverter}}"
                    VerticalAlignment="Center">
            
            <TextBox Grid.Column="0"
                     MaxWidth="170"
                     Width="170"
                     FontSize="16"
                     HorizontalAlignment="Left"
                     ext:FocusExtension.IsFocused="{Binding RenameActive, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource StandardTextBox}"
                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}">

                <i:Interaction.Triggers>

                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding ToggleRenameCommand}"
                                               CommandParameter="False"/>
                    </i:EventTrigger>

                </i:Interaction.Triggers>

            </TextBox>
            
        </StackPanel>
        
        <!-- Save rename -->
        <Grid Visibility="{Binding RenameActive, Converter={StaticResource booleanToVisibilityConverter}}">
            
            <Button Style="{StaticResource ColorBackgroundButton}"
                    IsDefault="True"
                    Command="{Binding ToggleRenameCommand}"
                    FontFamily="{StaticResource FontAwesome}"
                    FontSize="18"
                    Margin="0 0 10 0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    ToolTip="Save current name"
                    Content="&#xf0c7;" />
            
        </Grid>

        <!-- Progress and icons -->
        <StackPanel Orientation="Horizontal"
                    Visibility="{Binding RenameActive, Converter={StaticResource reversedBooleanToVisibilityConverter}}"
                    Grid.Column="1">

            <!-- Completed icon -->
            <TextBlock Text="&#xf560;"
                       ToolTip="Completed"
                       FontFamily="{StaticResource FontAwesome}"
                       Visibility="{Binding Completed, Converter={StaticResource booleanToVisibilityConverter}}"
                       Foreground="ForestGreen" 
                       FontSize="18"
                       Margin="0 0 10 0"
                       VerticalAlignment="Center" />

            <!-- Empty icon -->
            <TextBlock Text="&#xf12a;"
                       ToolTip="Empty"
                       FontFamily="{StaticResource FontAwesome}"
                       Visibility="{Binding Tasks.Count, Converter={StaticResource emptyToVisibilityConverter}}"
                       Foreground="Orange" 
                       FontSize="18"
                       Margin="0 0 10 0"
                       VerticalAlignment="Center" />

            <!-- Progress -->
            <TextBlock Style="{StaticResource SmallTextBlock}"
                       Visibility="{Binding Source={x:Static prop:Settings.Default}, Path=TodoProgressShowPercent, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource reversedBooleanToVisibilityConverter}}"
                       Opacity="0.75"
                       FontFamily="{StaticResource LatoRegular}"
                       VerticalAlignment="Center"
                       Text="{Binding ProgressString}" />
            
            <!-- Progress percentage -->
            <TextBlock Style="{StaticResource SmallTextBlock}"
                       Visibility="{Binding Source={x:Static prop:Settings.Default}, Path=TodoProgressShowPercent, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource booleanToVisibilityConverter}}"
                       Opacity="0.75"
                       FontFamily="{StaticResource LatoRegular}"
                       VerticalAlignment="Center"
                       Text="{Binding Progress, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, StringFormat={}{0:0} %}" />

        </StackPanel>      

        <!-- Drag handle -->
        <Button Grid.Column="2"
                IsTabStop="False"
                HorizontalAlignment="Right"
                Style="{StaticResource FlatSmallIconButton}"
                ToolTip="Reorder"                
                Visibility="{Binding DataContext.SearchMode, Converter={StaticResource reversedBooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=ListView}}"
                Foreground="{DynamicResource DarkerColorForegroundBrush}"
                Cursor="SizeAll"
                FontSize="20"
                Margin="10 0"
                Padding="10"
                Content="&#xf0c9;">

            <!-- When drag occurs, activate drag -->
            <i:Interaction.Triggers>                
                <i:EventTrigger EventName="DragEnter">
                    <i:InvokeCommandAction Command="{Binding DataContext.ActivateDragCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            
        </Button>

    </Grid>
    
</UserControl>
