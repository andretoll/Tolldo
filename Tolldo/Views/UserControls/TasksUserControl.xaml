<UserControl x:Class="Tolldo.Views.UserControls.TasksUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uc="clr-namespace:Tolldo.Views.UserControls"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <DockPanel LastChildFill="True"
               ClipToBounds="True"
               DataContext="{Binding SelectedTodo}">

        <!-- Banner -->
        <Grid DockPanel.Dock="Top"
              Height="175">

            <Grid.ColumnDefinitions>
                <!-- Left -->
                <ColumnDefinition Width="*" />
                <!-- Center -->
                <ColumnDefinition Width="*" />
                <!-- Right -->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Banner image -->
            <Image Stretch="UniformToFill"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Grid.ColumnSpan="3" 
                   Source="/Images/welcome_winter.jpg" />

            <!-- Banner overlay -->
            <Rectangle Fill="Black"
                       Opacity="0.5"
                       Grid.ColumnSpan="3" />

            <!-- To-do list name -->
            <TextBlock Style="{StaticResource HeaderTextBlock}"
                       Foreground="{StaticResource LightForegroundBrush}"
                       FontSize="28"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       Margin="0 50 0 0"
                       Text="{Binding Name}" />

            <!-- Progress percentage -->
            <TextBlock Style="{StaticResource MediumTextBlock}"
                       Foreground="{StaticResource LightForegroundBrush}"
                       FontSize="42"
                       FontFamily="{StaticResource LatoThin}"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"
                       Margin="0 0 0 5"
                       Text="{Binding Progress, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, StringFormat={}{0:0}%}" />
            
        </Grid>

        <!-- Progress -->
        <Grid Width="auto"
              Height="10"
              Visibility="{Binding Path=., UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullToVisibilityConverter}}"
              DockPanel.Dock="Top"
              VerticalAlignment="Top">

            <!-- Progress bar -->
            <ProgressBar Minimum="0"
                         Maximum="100"
                         x:Name="FadingProgressBar"
                         Value="{Binding Progress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}">

                <ProgressBar.Style>
                    <Style TargetType="{x:Type ProgressBar}">
                        <Setter Property="Foreground" Value="{DynamicResource ColorGradientBrush}" />
                        <Style.Triggers>
                            
                            <!-- When progress equals 100 -->
                            <DataTrigger Binding="{Binding Progress}" Value="100">
                                <Setter Property="Foreground" Value="{StaticResource GreenGradientBrush}" />
                            </DataTrigger>
                            
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>

                <!-- Animation -->
                <ProgressBar.Triggers>
                    <EventTrigger RoutedEvent="Binding.TargetUpdated">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="FadingProgressBar"
                                                 SpeedRatio="2"
                                                 Storyboard.TargetProperty="Value"
                                                 From="{Binding LastProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"
                                                 To="{Binding Progress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"
                                                 Duration="00:00:01" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ProgressBar.Triggers>

            </ProgressBar>

        </Grid>

        <!-- Tasks -->
        <DockPanel LastChildFill="True">

            <!-- New task -->
            <Grid DockPanel.Dock="Bottom"
                  Panel.ZIndex="1000"                  
                  Visibility="{Binding ElementName=TasksScrollViewer, Path=ComputedVerticalScrollBarVisibility, UpdateSourceTrigger=PropertyChanged}"
                  Background="{DynamicResource DarkerColorForegroundBrush}"
                  VerticalAlignment="Top">

                <Grid.Effect>
                    <DropShadowEffect Direction="90" Opacity="0.50" ShadowDepth="8" BlurRadius="30"  />
                </Grid.Effect>

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Setters>
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource verticalScrollToVisibilityConverter}">
                                        <Binding ElementName="TasksScrollViewer" Path="VerticalOffset" />
                                        <Binding ElementName="TasksScrollViewer" Path="ScrollableHeight" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </Grid.Style>

                <Border Padding="10"
                        Height="50">
                    
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Opacity" Value="0.5" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NewTaskActive}" Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- Checkbox -->
                            <ColumnDefinition Width="auto" />
                            <!-- TextBox -->
                            <ColumnDefinition Width="*" />
                            <!-- Actions -->
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Just for show -->
                        <TextBlock Style="{StaticResource MediumTextBlock}"
                                   Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource LightForegroundBrush}"
                                   FontFamily="{StaticResource FontAwesome}"
                                   Margin="4 0 0 0"
                                   FontSize="22"
                                   Text="&#xf0fe;" />

                        <!-- Name for task -->
                        <TextBox Style="{StaticResource LongTextBox}"
                                 Margin="10 0 0 0"
                                 Grid.Column="1"
                                 Foreground="{StaticResource LightForegroundBrush}"
                                 CaretBrush="{StaticResource LightForegroundBrush}"
                                 Text="{Binding NewTask.Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=Add new}">

                            <i:Interaction.Triggers>

                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding ToggleNewTaskCommand}"
                                                           CommandParameter="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding ToggleNewTaskCommand}"
                                                           CommandParameter="False"/>
                                </i:EventTrigger>

                            </i:Interaction.Triggers>

                        </TextBox>

                        <!-- Save button -->
                        <Button Grid.Column="2"
                                IsDefault="True"
                                ToolTip="Add Task"
                                Focusable="False"
                                Visibility="{Binding NewTaskActive, Converter={StaticResource booleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                Command="{Binding SaveNewTaskCommand}"
                                Margin="10 0 0 0"
                                Style="{StaticResource FlatIconButtonSquare}"
                                FontFamily="{StaticResource FontAwesome}"
                                FontSize="16"
                                Content="&#xf0c7;"/>
                    </Grid>
                    
                </Border>

            </Grid>

            <!-- Tasks -->
            <ScrollViewer CanContentScroll="False"
                          x:Name="TasksScrollViewer"
                          VerticalScrollBarVisibility="Auto">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <!-- List of tasks -->
                    <ListBox ItemsSource="{Binding Tasks, UpdateSourceTrigger=PropertyChanged}"
                             Grid.Row="0"
                             SelectedItem="{Binding SelectedTask}"
                             Style="{StaticResource ListBoxBase}"
                             ItemContainerStyle="{StaticResource ListBoxItemCheckbox}"
                             dd:DragDrop.IsDropTarget="True"
                             dd:DragDrop.IsDragSource="True"
                             dd:DragDrop.DropHandler="{Binding}">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <uc:TaskItemUserControl />
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                    </ListBox>

                    <!-- New task -->
                    <Grid Grid.Row="1"
                          VerticalAlignment="Top">

                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Setters>
                                    <Setter Property="Visibility">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource reversedVerticalScrollToVisibilityConverter}">
                                                <Binding ElementName="TasksScrollViewer" Path="VerticalOffset" />
                                                <Binding ElementName="TasksScrollViewer" Path="ScrollableHeight" />
                                                <Binding ElementName="TasksScrollViewer" Path="ComputedVerticalScrollBarVisibility" />
                                                <Binding ElementName="TasksScrollViewer" Path="IsEnabled" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Style.Setters>
                            </Style>
                        </Grid.Style>

                        <Border Padding="12 10"
                                Focusable="False"
                                Height="50">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Opacity" Value="0.5" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NewTaskActive}" Value="True">
                                            <Setter Property="Opacity" Value="1" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Grid Focusable="False">
                                <Grid.ColumnDefinitions>
                                    <!-- Checkbox -->
                                    <ColumnDefinition Width="auto" />
                                    <!-- TextBox -->
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                
                                <!-- Save button -->
                                <Button Style="{StaticResource FlatSmallIconButton}"
                                        IsDefault="True"
                                        Focusable="False"
                                        ToolTip="Save"
                                        Grid.Column="0"
                                        Command="{Binding SaveNewTaskCommand}"
                                        VerticalAlignment="Center"
                                        FontSize="22"
                                        FontFamily="{StaticResource FontAwesome}"                                            
                                        Margin="2 0 10 0"
                                        Content="&#xf0fe;" />

                                <!-- Name for task -->
                                <TextBox Style="{StaticResource LongTextBox}"
                                         Grid.Column="1"
                                         Foreground="{DynamicResource PrimaryForegroundBrush}"
                                         CaretBrush="{DynamicResource PrimaryForegroundBrush}"
                                         Text="{Binding NewTask.Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=Add new}">

                                    <i:Interaction.Triggers>

                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ToggleNewTaskCommand}"
                                                                   CommandParameter="True"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ToggleNewTaskCommand}"
                                                                   CommandParameter="False"/>
                                        </i:EventTrigger>

                                    </i:Interaction.Triggers>

                                </TextBox>

                                
                            </Grid>
                            
                        </Border>

                    </Grid>

                </Grid>

            </ScrollViewer>
            
        </DockPanel>

    </DockPanel>

</UserControl>
