<UserControl x:Class="Tolldo.Views.UserControls.TasksUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uc="clr-namespace:Tolldo.Views.UserControls"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <DockPanel LastChildFill="True"
               DataContext="{Binding SelectedTodo}">

        <!-- Banner -->
        <Grid DockPanel.Dock="Top"
              Height="175">

            <Grid.ColumnDefinitions>
                <!-- Left -->
                <ColumnDefinition Width="auto" />
                <!-- Center -->
                <ColumnDefinition Width="*" />
                <!-- Right -->
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <!-- Banner image -->
            <Image Stretch="UniformToFill"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Grid.ColumnSpan="3" 
                   Source="/Images/welcome_winter.jpg"/>

            <!-- Banner overlay -->
            <Rectangle Fill="Black"
                       Opacity="0.5"
                       Grid.ColumnSpan="3" />

            <!-- To-do list name -->
            <TextBlock Style="{StaticResource HeaderTextBlock}"
                       Foreground="{StaticResource LightForegroundBrush}"
                       FontSize="28"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       Margin="0 50 0 0"
                       Text="{Binding Name}" />

            <!-- Progress percentage -->
            <TextBlock Style="{StaticResource MediumTextBlock}"
                       Foreground="{StaticResource LightForegroundBrush}"
                       FontSize="42"
                       FontFamily="{StaticResource LatoThin}"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"
                       Margin="0 0 0 5"
                       Text="{Binding Progress, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, StringFormat={}{0:0}%}" />

        </Grid>

        <!-- Progress -->
        <Grid Width="auto"
              Height="10"
              Visibility="{Binding Path=., UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullToVisibilityConverter}}"
              DockPanel.Dock="Top"
              VerticalAlignment="Top">

            <!-- Progress bar -->
            <ProgressBar Minimum="0"
                         Maximum="100"
                         x:Name="FadingProgressBar"
                         Value="{Binding Progress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}">

                <ProgressBar.Style>
                    <Style TargetType="{x:Type ProgressBar}">
                        <Setter Property="Foreground" Value="{DynamicResource ColorGradientBrush}" />
                        <Style.Triggers>
                            
                            <!-- When progress equals 100 -->
                            <DataTrigger Binding="{Binding Progress}" Value="100">
                                <Setter Property="Foreground" Value="{StaticResource GreenGradientBrush}" />
                            </DataTrigger>
                            
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>

                <!-- Animation -->
                <ProgressBar.Triggers>
                    <EventTrigger RoutedEvent="Binding.TargetUpdated">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="FadingProgressBar"
                                                 SpeedRatio="2"
                                                 Storyboard.TargetProperty="Value"
                                                 From="{Binding LastProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"
                                                 To="{Binding Progress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"
                                                 Duration="00:00:01" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ProgressBar.Triggers>

            </ProgressBar>

        </Grid>

        <!-- Tasks -->
        <Grid>
            <!-- Tasks -->
            <ScrollViewer CanContentScroll="False"
                          VerticalScrollBarVisibility="Auto">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <!-- List of tasks -->
                    <ListBox ItemsSource="{Binding Tasks, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Row="0"
                         SelectedItem="{Binding SelectedTask}"
                         Style="{StaticResource ListBoxBase}"
                         ItemContainerStyle="{StaticResource ListBoxItemCheckbox}"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.DropHandler="{Binding}">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <uc:TaskItemUserControl />
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                    </ListBox>

                    <!-- New task -->
                    <Grid Grid.Row="1"
                      Height="30"
                      Margin="11 11 11 30"
                      VerticalAlignment="Top">

                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Opacity" Value="0.5" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding NewTaskActive}" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.ColumnDefinitions>
                            <!-- Checkbox -->
                            <ColumnDefinition Width="auto" />
                            <!-- TextBox -->
                            <ColumnDefinition Width="*" />
                            <!-- Actions -->
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Just for show -->
                        <CheckBox Grid.Column="0"
                              VerticalAlignment="Center"
                              IsEnabled="False"
                              IsChecked="False"
                              Style="{StaticResource TaskCheckBox}"/>

                        <!-- Name for task -->
                        <TextBox Style="{StaticResource LongTextBox}"
                             Grid.Column="1"
                             Text="{Binding NewTask.Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=Add new}">

                            <i:Interaction.Triggers>

                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding ToggleNewTaskCommand}"
                                                       CommandParameter="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding ToggleNewTaskCommand}"
                                                       CommandParameter="False"/>
                                </i:EventTrigger>

                            </i:Interaction.Triggers>

                        </TextBox>

                        <!-- Save button -->
                        <Button Grid.Column="2"
                            IsDefault="True"
                            ToolTip="Add Task"
                            Focusable="False"
                            Visibility="{Binding NewTaskActive, Converter={StaticResource booleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                            Command="{Binding SaveNewTaskCommand}"
                            Margin="10 0 0 0"
                            Style="{StaticResource FlatIconButtonSquare}"
                            FontFamily="{StaticResource FontAwesome}"
                            FontSize="16"
                            Content="&#xf0c7;"/>

                    </Grid>

                </Grid>

            </ScrollViewer>
            
        </Grid>

    </DockPanel>

</UserControl>
