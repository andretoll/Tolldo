<UserControl x:Class="Tolldo.Views.UserControls.CollapsedMenuUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="100">

    <!-- Collapsed menu -->
    <DockPanel Visibility="{Binding DataContext.Pinned, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource reversedBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">

        <!-- Upper -->
        <StackPanel DockPanel.Dock="Top"
                    Margin="20 20 20 0"
                    Visibility="{Binding IsSettingsMenuOpen, Converter={StaticResource reversedBooleanToVisibilityConverter}}">

            <!-- Collapse button -->
            <Button Style="{StaticResource FlatSmallIconButton}"
                    Margin="0 0 0 25"
                    ToolTip="Show/Collapse"
                    ToolTipService.InitialShowDelay="0"
                    Command="{Binding CollapseMenuCommand}"
                    FontSize="22"
                    Content="&#xf0c9;" />

            <!-- Home button -->
            <Button Style="{StaticResource FlatSmallIconButton}"
                    Margin="0 0 0 25"
                    ToolTip="Home"
                    ToolTipService.InitialShowDelay="0"
                    Command="{Binding NavigateHomeCommand}"
                    FontSize="22"
                    Content="&#xf015;" />
            
            <!-- Import button -->
            <Button Style="{StaticResource FlatSmallIconButton}"
                    Margin="0 0 0 25"
                    ToolTip="Import file"
                    ToolTipService.InitialShowDelay="0"
                    FontSize="22"
                    Content="&#xf56f;" />

        </StackPanel>        

        <!-- Lower -->
        <StackPanel DockPanel.Dock="Bottom"
                    Margin="20 0 20 20"
                    VerticalAlignment="Bottom">

            <!-- Accent and Theme -->
            <StackPanel Visibility="{Binding IsSettingsMenuOpen, Converter={StaticResource reversedBooleanToVisibilityConverter}}">
                
                <!-- Accents container -->
                <Border CornerRadius="20"
                        Padding="5 10"
                        BorderThickness="1">

                    <!-- Accents background -->
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                
                                <!-- When menu opens -->
                                <DataTrigger Binding="{Binding IsAccentsMenuOpen}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
                                </DataTrigger>
                                
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <StackPanel>

                        <!-- Colors -->
                        <StackPanel Orientation="Vertical"
                                ClipToBounds="True">

                            <StackPanel Visibility="{Binding IsAccentsMenuOpen, Converter={StaticResource booleanToVisibilityConverter}}">

                                <!-- Accents open animation -->
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            
                                            <!-- When menu opens -->
                                            <DataTrigger Binding="{Binding IsAccentsMenuOpen, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                                            From="0 -150 0 0"
                                                                            To="0"
                                                                            Duration="0:0:0.4" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <!-- Color 1-->
                                <Button Style="{StaticResource ColorBackgroundButton}"
                                    Command="{Binding SetAccentCommand}"
                                    CommandParameter="Blue"
                                    Margin="0 5"
                                    Background="{StaticResource BlueColorGradientBrush}"
                                    ToolTip="Blue"
                                    FontSize="14" />

                                <!-- Color 2 -->
                                <Button Style="{StaticResource ColorBackgroundButton}"
                                    Command="{Binding SetAccentCommand}"
                                    CommandParameter="Red"
                                    Margin="0 0 0 5"
                                    Background="{StaticResource RedColorGradientBrush}"
                                    ToolTip="Red"
                                    FontSize="16" />

                                <!-- Color 3 -->
                                <Button Style="{StaticResource ColorBackgroundButton}"
                                    Command="{Binding SetAccentCommand}"
                                    CommandParameter="Orange"
                                    Margin="0 0 0 5"
                                    Background="{StaticResource OrangeColorGradientBrush}"
                                    ToolTip="Orange"
                                    FontSize="16" />

                                <!-- Color 4 -->
                                <Button Style="{StaticResource ColorBackgroundButton}"
                                    Command="{Binding SetAccentCommand}"
                                    CommandParameter="Pink"
                                    Margin="0 0 0 5"
                                    Background="{StaticResource PinkColorGradientBrush}"
                                    ToolTip="Pink"
                                    FontSize="16" />

                            </StackPanel>

                        </StackPanel>

                        <!-- Accents menu button -->
                        <Button Style="{StaticResource FlatSmallIconButton}"
                                Command="{Binding ToggleAccentsMenuCommand}"
                                ToolTip="Accent"
                                ToolTipService.InitialShowDelay="0"
                                FontSize="22"
                                Content="&#xf576;" />

                    </StackPanel>

                </Border>

                <!-- Theme button -->
                <Button Margin="0 25 0 0"
                        Command="{Binding InvertThemeCommand}"
                        ToolTipService.InitialShowDelay="0"
                        FontSize="22" >

                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FlatSmallIconButton}">
                            <Setter Property="Content" Value="&#xf185;" />
                            <Setter Property="ToolTip" Value="Theme" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DarkThemeEnabled, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Content" Value="&#xf185;" />
                                    <Setter Property="ToolTip" Value="Light theme" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DarkThemeEnabled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Content" Value="&#xf186;" />
                                    <Setter Property="ToolTip" Value="Dark theme" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                </Button>
                
            </StackPanel>

            <!-- Settings button -->
            <ToggleButton IsChecked="{Binding IsSettingsMenuOpen}"
                          Margin="0 25 0 0"
                          ToolTip="Settings"
                          ToolTipService.InitialShowDelay="0"
                          Content="&#xf085;"/>

        </StackPanel>

        <!-- Center -->
        <Grid Visibility="{Binding IsSettingsMenuOpen, Converter={StaticResource reversedBooleanToVisibilityConverter}}"
              VerticalAlignment="Top">

            <!-- List of favorites -->
            <ScrollViewer CanContentScroll="False"
                          Visibility="{Binding IsMenuOpen, Converter={StaticResource reversedBooleanToVisibilityConverter}}"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Disabled">

                <Grid>
                    
                    <ListView ItemsSource="{Binding Todos, Mode=OneWay}"
                              SelectedItem="{Binding SelectedTodo, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              Style="{StaticResource ListViewBase}"
                              SelectionMode="Single">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Margin" Value="4" />
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <Grid Visibility="{Binding IsFavorite, Converter={StaticResource booleanToVisibilityConverter}}">
                                                
                                                <!-- Icon -->
                                                <TextBlock Text="&#xf521;"
                                                           Foreground="Goldenrod"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Top"
                                                           Margin="2 -3 0 5"
                                                           FontSize="14"
                                                           RenderTransformOrigin="0.5, 0.5"
                                                           FontFamily="{StaticResource FontAwesome}">

                                                    <TextBlock.RenderTransform>
                                                        <RotateTransform CenterX="0" CenterY="0" Angle="-53" />
                                                    </TextBlock.RenderTransform>

                                                </TextBlock>
                                                
                                                <Border BorderBrush="{DynamicResource PrimaryForegroundBrush}"
                                                        BorderThickness="2"
                                                        Background="Transparent"
                                                        Width="50"
                                                        Height="50"
                                                        CornerRadius="50"
                                                        Opacity="{TemplateBinding Opacity}"
                                                        Padding="5">

                                                    <ContentPresenter />

                                                </Border>
                                                
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <!-- When selected -->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" Value="9" />
                                    </Trigger>

                                    <!-- When hovering and not selected -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Opacity" Value="8" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>

                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate>

                                <Grid ToolTip="{Binding Name}"
                                      ToolTipService.InitialShowDelay="0"
                                      Width="35"
                                      Height="35">

                                    <TextBlock Text="{Binding Name, Converter={StaticResource acronymConverter}}"
                                               Style="{StaticResource LargeTextBlock}"
                                               Foreground="{DynamicResource PrimaryForegroundBrush}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                
                                </Grid>

                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </ListView.Template>

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                    </ListView>
                    
                </Grid>

            </ScrollViewer>

        </Grid>

    </DockPanel>
    
</UserControl>
